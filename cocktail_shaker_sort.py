def cocktail_shaker_sort(arr):
    n = len(arr)           # Зберігаємо довжину масиву
    start = 0              # Початкова межа "проходу"
    end = n - 1            # Кінцева межа "проходу"

    while True:
        swapped = False    # Прапорець, що показує, чи були обміни

        # Прохід зліва направо (як у звичайному сортуванні бульбашкою)
        for i in range(start, end):
            if arr[i] > arr[i + 1]:
                # Якщо елементи не у правильному порядку — міняємо місцями
                arr[i], arr[i + 1] = arr[i + 1], arr[i]
                swapped = True      # Позначаємо, що був обмін

        end -= 1            # Зменшуємо межу, оскільки останній елемент вже на місці

        # Прохід справа наліво — "зворотний хід"
        for i in range(end, start, -1):
            if arr[i - 1] > arr[i]:
                # Знову міняємо місцями, якщо попередній більший за наступний
                arr[i - 1], arr[i] = arr[i], arr[i - 1]
                swapped = True

        print(*arr)         # Виводимо поточний стан масиву

        if not swapped:
            # Якщо за обидва проходи не було жодного обміну — масив відсортований
            break

        start += 1          # Зсуваємо ліву межу вправо

if __name__ == "__main__":
    n = int(input())                      # Зчитуємо кількість елементів
    arr = list(map(int, input().split()))  # Зчитуємо масив чисел
    cocktail_shaker_sort(arr)            # Викликаємо функцію сортування
